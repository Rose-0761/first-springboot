<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper  namespace="com.zz.firstspringboot.mapper.StudentMapper" >
<resultMap id="StudentMapper" type="Student">
<id property="id" column="id"/>
    <result property="stuCode" column="stu_code"/>
    <result property="stuName" column="stu_name"/>
    <result property="stuSex" column="stu_sex"/>
    <result property="teamId" column="team_id"/>
    <result property="stuAge" column="stu_age"/>
    <result property="deleted" column="deleted"/>

    <association property="team" javaType="team">
        <id property="id" column="id"/>
        <result property="teamCode" column="team_code"/>
        <result property="teamName" column="team_name"/>
        <result property="collegeId" column="college_id"/>
        <result property="deleted" column="deleted"/>
    </association>
    <association property="college" javaType="college">
        <id property="id" column="id"/>
        <result property="collegeCode" column="college_code"/>
        <result property="collegeName" column="college_name"/>
        <result property="deleted" column="deleted"/>
    </association>

</resultMap>
    <!--   List <Student> findAll();-->
    <select id="findStuAll" resultMap="StudentMapper">

        select
          student.stu_code,student.stu_name,student.stu_sex,student.stu_age,
          team.team_name,college.college_name


        ,student.id,team.id,student.team_id,student.deleted, team.team_code,
        team.college_id,team.deleted,college.id,college.college_code,college.deleted
        from student
        JOIN team
        ON student.team_id = team.id
        JOIN college
        ON team.college_id = college.id
        where student.deleted=0

    </select>
    <!-- List <Student> findOneById(..);-->
    <select id="findStuByIf"  resultMap="StudentMapper">
        Select * from student
                          JOIN team ON student.team_id = team.id
                          JOIN college ON team.college_id = college.id

                         <where>
                             <if test="stuCode != null">
                             AND student.stu_code=#{stuCode}
                             </if>
                             <if test="stuName != null">
                             AND student.stu_name=#{stuName}
                             </if>
                             <if test="teamName != null">
                             AND team.team_name=#{teamName}
                             </if>
                              <if test="collegeName != null">
                                  AND college.college_name=#{collegeName}
                              </if>
                             AND student.deleted=0
                          </where>

    </select>
    <!--  List<Student> findByIf(...);-->
    <select id="findStuById"  resultMap="StudentMapper">
        Select * from student
                          JOIN team
                               ON student.team_id = team.id
                          JOIN college
                               ON team.college_id = college.id
                          <where>
                          <if test="id != null">
                          AND student.id=#{id}
                          </if>
                          AND student.deleted=0
                          </where>
    </select>
    <!--  int updateStu(...);-->
    <update id="updateStu" parameterType="Student" >
        update student
      <set>
          <if test="stuCode != null">
              stu_code = #{stuCode},</if>
            <if test="stuName != null">
            stu_name =#{stuName},</if>
            <if test="stuSex != null">
                stu_sex=#{stuSex},</if>
            <if test="stuAge != null">
                 stu_Age=#{stuAge},</if>
            <if test="teamId != null ">
             team_id =#{teamId} </if>
      </set>
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            AND deleted=0
        </where>
    </update>
    <!--    int insertStu(...);-->
    <insert id="insertStu" parameterType="Student" >
      insert into student
        (stu_code,stu_name,stu_age,stu_sex,team_id)
        <trim prefix=" values  ( " suffix=" ) " suffixOverrides=" , ">
           <if test="stuCode != null">
               #{stuCode},
           </if>
           <if test="stuName != null">
               #{stuName},
           </if>
           <if test="stuSex != null">
               #{stuSex},
           </if>
           <if test="stuAge != null">
               #{stuAge},
           </if>
           <if test="teamId != null">
               #{teamId},
           </if>
        </trim>
    </insert>
    <!--     int deleteStu(...);-->
    <update id="deleteStu" parameterType="Student">
        update student
        set
            deleted=1
        <where>
            <if test="id != null">
                id = #{id}
            </if>
            AND deleted=0
        </where>
    </update>


</mapper>